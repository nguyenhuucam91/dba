version: '3.2'

services:
  # laravel stack
  web:
    container_name: laravel-dba-docker-nginx-latest
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./laravel-dba:/var/www
      - ./nginx/site.conf:/etc/nginx/conf.d/site.conf
    depends_on:
      - php
      - mysql
      - mongo
      - redis
      - elasticsearch
    networks: 
      - dba
  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: laravel-dba-docker-php-fpm
    image: devilbox/php-fpm:7.4-prod-0.106
    restart: always
    volumes:
      - ./laravel-dba:/var/www
      - ./php/php.ini:/etc/php/7.4/fpm/php.ini
    depends_on:
      - mysql
      - elasticsearch
      - mongo
    networks: 
      - dba
  mysql:
    container_name: laravel-dba-docker-mysql
    image: mysql:5.6.26
    restart: always
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=laravel-dba
      - MYSQL_ROOT_PASSWORD=123456
    networks: 
      - dba
  redis:
    container_name: laravel-dba-docker-redis
    restart: always
    image: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
    networks: 
      - dba
  mongo:
    container_name: laravel-dba-docker-mongodb
    restart: always
    image: mongo:latest
    ports: 
      - "27017:27017"
    depends_on: 
      - elasticsearch
    networks: 
      - dba
  # elasticsearch
  elasticsearch:
    container_name: laravel-dba-docker-elasticsearch
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: 7.10.1
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - dba

  kibana:
    container_name: laravel-dba-docker-kibana
    build:
      context: kibana/
      args:
        ELK_VERSION: 7.10.1
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - dba
    depends_on:
      - elasticsearch

networks:
  dba:
    driver: bridge

volumes:
  elasticsearch:
